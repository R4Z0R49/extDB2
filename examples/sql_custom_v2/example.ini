[Default]
Version = 10

Number of Inputs = 0

;;Sanitize Checks are better than Strip Characters, but only accept ASCII Characters
;;Requires abit more work to setup correctly.
Sanitize Input Value Check = false
Sanitize Output Value Check = false 

;;Allows you to disable Prepared Statement Caching.
;;Mainly for people that don't want to waste memory on caching a Statement that is only once. 
Prepared Statement Cache = true

;;Returns InsertID, Instead of returning [1,[]] It returns [1,[<INSERTID>,[]]]
Return InsertID = false

;;Strip Characters
Strip = true
;;Possible Actions Are "Strip" / "Strip+Log" / "Strip+Error" / "None"
Strip Chars Action = STRIP
Strip Chars = /\|;{}<>'`
;;Strip Chars Used for $CUSTOM_x$ Inputs
Strip Custom Chars = /\|;{}<>'`


; --------------------------------------------------------------------------------
; SQL Statements
; --------------------------------------------------------------------------------

[existPlayerInfo]
;; Name of call == existPlayerInfo
SQL1_1 = SELECT CASE
SQL1_2 =    WHEN EXISTS(SELECT * FROM PlayerInfo WHERE UID = ?)
SQL1_3 =           THEN 'true' ELSE 'false'
SQL1_4 = END
SQL1_INPUTS = 1

Number of Inputs = 1

;;SQL Statements can be split up into multiple lines to make more readable. 
;; You can also run multiple SQL Statements via SQL2_1, SQL2_2, SQL3_1 etc..


[updatePlayerSaveValueString]
SQL1_1 = UPDATE PlayerSave
SQL1_2 =    SET $CUSTOM_1$ = ?
SQL1_3 = WHERE PlayerUID = ? AND MapID = ?;
SQL1_INPUTS = 3, 1, 2

Number of Inputs = 3
Number of Custom Inputs = 1

;;$CUSTOM_x$ allows you to insert dynamic text into an prepared statement.
;;Downside is the statement isn't cached + possible less secure. 

;;Note the order of passing inputs to extDB2 is important with custom inputs.
;; Its <inputs>:<custom_inputs>
;; So the inputs would be in this order _playerUID:_mapID:_value:_custom_1 

;;Also you can re-arrange the Input Value Order


[gangInfo]
SQL1_1 = SELECT id, owner, name, maxmembers, bank, members FROM gangs WHERE active='1' AND members LIKE ?;
SQL1_INPUTS = 1

Number of Inputs = 1  
OUTPUT = 1, 2-String, 3-String, 4, 5, 6

;;You can also define options for Output Value aswell if you like aswell i.e 1-STRING-BEGUID
;;Or do mixture of using INPUTS + OUTPUT Options. 

